<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Haskell on Jare&#39;s Blog</title>
    <link>https://thejare.github.io/tags/haskell/</link>
    <description>Recent content in Haskell on Jare&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Mar 2013 23:05:18 +0000</lastBuildDate>
    <atom:link href="https://thejare.github.io/tags/haskell/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Haskell</title>
      <link>https://thejare.github.io/p2649</link>
      <pubDate>Sun, 03 Mar 2013 23:05:18 +0000</pubDate>
      
      <guid>https://thejare.github.io/p2649</guid>
      <description>&lt;p&gt;Back in my 2nd year in college (1990), I took a half year course on functional programming. Back then, having several years of heavy duty Z80 assembly &lt;a href=&#34;http://www.mobygames.com/game/star-dust&#34; target=&#34;_blank&#34;&gt;videogames &lt;/a&gt;&lt;a href=&#34;http://computeremuzone.com/ficha.php?id=281&#34; target=&#34;_blank&#34;&gt;programming&lt;/a&gt;, and being recently introduced to high level languages via Pascal and Modula 2, my brain was very fresh and open to new paradigms and ideas. Structured languages like Pascal and C were a great way to remove some of the tedium and bureaucracy of assembly, but functional was mindblowing. I already understood the idea of passing functions around as parameters, since we did a lot of that in our semi-OOP approach to game character behaviour. But when you create your first infinite list, wow, that&amp;#8217;s a moment to remember!&lt;/p&gt;

&lt;p&gt;So I went on, learned my &lt;a href=&#34;http://caml.inria.fr/caml-light/index.en.html&#34; target=&#34;_blank&#34;&gt;Caml Light&lt;/a&gt; in college, some Lisp which was fascinating but I never found a use for, and even Prolog which was mindblowing in a different way. For &lt;a href=&#34;http://pouet.net/groups.php?which=137&#34; target=&#34;_blank&#34;&gt;practical&lt;/a&gt; &lt;a href=&#34;http://www.mobygames.com/developer/sheet/view/developerId,36254/&#34; target=&#34;_blank&#34;&gt;purposes&lt;/a&gt; outside of school, however, I just moved from assembly to C and then C++ as my primary development languages. I still used function parameters and some other patterns in C/C++, but for the most part I&amp;#8217;ve been an imperative, OOP kind of guy for two decades.&lt;/p&gt;

&lt;p&gt;About a year ago I became interested in JavaScript.Â While there&amp;#8217;s a lot of crap code written in JavaScript, and the language has many warts and quirks, it is a great language for prototype development in both client (via HTML5 Canvas) and server (via NodeJS). JavaScript is so free form that it allows many paradigms and idioms, and one that enjoys some popularity is functional programming. That&amp;#8217;s how I became curious about it again. But while functional is a very practical philosophy to apply in JavaScript, the language is not quite enough to support everything that functional has to offer. I had to look at other languages. Ruby is only semi-functional. Clojure is too lisp-like (i.e. hard to read) for my taste. Scala seems to suffer from C++&amp;#8217;s kitchen-sink overgrowth. Haskell is feared by many and mastered by few, but those who love it seem to be incredibly smart people (thankfully, my brother is one of them :)), so with that little background I decided to go into it.&lt;/p&gt;

&lt;p&gt;Over the past few weeks, I have stolen a few hours here and there to toy with the language. It&amp;#8217;s been an interesting ride so far, but there&amp;#8217;s a lot yet to discover. The main sources of learning and reference are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://learnyouahaskell.com/&#34; target=&#34;_blank&#34;&gt;Learn You a Haskell&lt;/a&gt; &amp;#8211; a very entertaining introductory book&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://book.realworldhaskell.org/&#34; target=&#34;_blank&#34;&gt;Real World Haskell&lt;/a&gt; &amp;#8211; a more in-depth book covering practical use cases&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.haskell.org/haskellwiki/Haskell&#34; target=&#34;_blank&#34;&gt;Haskell Wiki&lt;/a&gt; &amp;#8211; the official wiki&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.haskell.org/hoogle/&#34; target=&#34;_blank&#34;&gt;Hoogle&lt;/a&gt; &amp;#8211; a search engine for Haskell stuff&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If I can find time, I will write more posts about my learning process with the language.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>