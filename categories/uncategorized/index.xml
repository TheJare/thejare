<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Uncategorized on Jare&#39;s Blog</title>
    <link>https://thejare.github.io/categories/uncategorized/</link>
    <description>Recent content in Uncategorized on Jare&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 16 Mar 2013 11:59:45 +0000</lastBuildDate>
    <atom:link href="https://thejare.github.io/categories/uncategorized/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Improv math</title>
      <link>https://thejare.github.io/2013/03/improv-math/</link>
      <pubDate>Sat, 16 Mar 2013 11:59:45 +0000</pubDate>
      
      <guid>https://thejare.github.io/2013/03/improv-math/</guid>
      <description>&lt;p&gt;I always loved math and it was one of my favourite subjects during school. I have to thank my dad and my bro for instilling that love in my head. My young self was always baffled by how most people around me not only hated math, but they seemed to have a hard time with it. How could it be hard? It was all logical, you hardly needed to work or memorize anything because, hey, with just a few basics in your head you could deduce any formulas or theorems you needed during an exam, right? Heh.&lt;/p&gt;

&lt;p&gt;This year I&amp;#8217;m one of the tutors for the &lt;a href=&#34;http://www.u-tad.com/masteres-2/programacion-videojuegos/&#34; target=&#34;_blank&#34;&gt;Master on Game Programming&lt;/a&gt; at the U-Tad. The subject I&amp;#8217;m teaching this course is Game Architecture: Game Objects, Main Loop and Timing, Reading &amp;amp; Saving, etc. This is the Master&amp;#8217;s debut year, so while I believe the course is going great (and students seem to agree so far), some bits and pieces are not ideal and will need improvement for the following years.&lt;/p&gt;

&lt;p&gt;One of them is, unsurprisingly, math.&lt;/p&gt;

&lt;p&gt;During a mid-course evaluation, the students complained that they didn&amp;#8217;t have enough math background to follow some of the subjects. 3D graphics, of course, was the major stumbling block a couple weeks earlier, but things would get hairy again when we got into physics, and in general many types of AI, entity behaviour and animation will need a decent grasp of math and algebra concepts. Students had some of the theoretical tools and knowledge, but lacked the practice and familiarity for putting them to use when solving actual problems. So I shaved a few hours off the Architecture stuff and improvised a quick couple of practical math classes; thankfully I had already scheduled my material in a, so to speak, agile way: most important stuff upfront, always ready to ship.&lt;/p&gt;

&lt;p&gt;As part of the materials, I rushed to put together a quick set of links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://steve-yegge.blogspot.com.es/2006/03/math-for-programmers.html&#34; target=&#34;_blank&#34;&gt;Math For Programmers&lt;/a&gt; by Steve Yegge&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.essentialmath.com/CollisionDetection.pps&#34; target=&#34;_blank&#34;&gt;Essential Math for Programmers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://acko.net/files/fullfrontal/fullfrontal/slides-net/&#34; target=&#34;_blank&#34;&gt;Making Things Out of Math&lt;/a&gt; (also check the video)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blogoben.wordpress.com/2011/06/05/webgl-basics-5-full-transformation-matrix/&#34; target=&#34;_blank&#34;&gt;3D Matrices&lt;/a&gt; tutorial (WebGL)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://easings.net/&#34; target=&#34;_blank&#34;&gt;Easing functions&lt;/a&gt; 1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.gizma.com/easing/&#34; target=&#34;_blank&#34;&gt;Easing functions&lt;/a&gt; 2&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/TheJare/functions&#34; target=&#34;_blank&#34;&gt;Easing functions&lt;/a&gt; 3&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.altdevblogaday.com/2013/03/15/what-is-gimbal-lock-and-why-do-we-still-have-to-worry-about-it/&#34; target=&#34;_blank&#34;&gt;Gimbal Lock&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Absolutely not a comprehensive set, but all useful stuff.&lt;/p&gt;

&lt;p&gt;The topics I touched during those two days included:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2D points and vectors&lt;/li&gt;
&lt;li&gt;The dot product, normals and reflecting a vector&lt;/li&gt;
&lt;li&gt;Sphere-sphere collisions and balls bouncing off each other&lt;/li&gt;
&lt;li&gt;Computing and working with angles&lt;/li&gt;
&lt;li&gt;Integrating motion over variable time steps&lt;/li&gt;
&lt;li&gt;Computing parabolic trajectories&lt;/li&gt;
&lt;li&gt;Lerping, easing functions, and how to derive and compose them&lt;/li&gt;
&lt;li&gt;2D transformations, 3&amp;#215;3 matrices and that 3rd component in a 2D vector&lt;/li&gt;
&lt;li&gt;Composing transforms, hierarchical scenes&lt;/li&gt;
&lt;li&gt;3D vectors and the cross product&lt;/li&gt;
&lt;li&gt;Extending matrices to 3D&lt;/li&gt;
&lt;li&gt;Coordinate systems and common transforms: local, world, camera, projection, viewport&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It was very useful for me and the students. Some funny things said during the classes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The computer doesn&amp;#8217;t understand &amp;#8220;nice looking&amp;#8221;, it can only chew on numbers&lt;/li&gt;
&lt;li&gt;Ignore left-handed, always use your right hand&lt;/li&gt;
&lt;li&gt;The cross product can sometimes be seen as the subtraction of two directions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope we will find time in the schedule to cover a bit more ground, either standalone or as part of the introduction to physics, as well as provide a better and more cohesive set of links.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Unity3D 3.5 mobile is free&amp;#8230;</title>
      <link>https://thejare.github.io/2012/03/unity3d-3.5-mobile-is-free</link>
      <pubDate>Wed, 07 Mar 2012 03:37:03 +0000</pubDate>
      
      <guid>https://thejare.github.io/2012/03/unity3d-3.5-mobile-is-free</guid>
      <description>&lt;p&gt;..Until April 8th. It normally costs around $800, so &lt;a href=&#34;https://store.unity3d.com/index.html&#34; target=&#34;_blank&#34;&gt;get it&lt;/a&gt; even if you don&amp;#8217;t have immediate plans to use it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Metro and JavaScript</title>
      <link>https://thejare.github.io/2012/03/metro-and-javascript/</link>
      <pubDate>Wed, 07 Mar 2012 03:18:08 +0000</pubDate>
      
      <guid>https://thejare.github.io/2012/03/metro-and-javascript/</guid>
      <description>&lt;p&gt;On Facebook I wrote a bunch of thoughts on the fact that Windows 8 treats JavaScript as a first-class citizen for native Metro apps. It was triggered by &lt;a title=&#34;Asynchronous programming in JavaScript using promises&#34; href=&#34;http://msdn.microsoft.com/en-us/library/windows/apps/hh464930.aspx&#34; target=&#34;_blank&#34;&gt;this&lt;/a&gt; and a few other related reads on WinJS.&lt;/p&gt;

&lt;p&gt;In general, there is value in having a single language available for all your needs and platforms even if it&amp;#8217;s not 100% portable (look at C/C++). JavaScript is the most widely available language today and, while ugly, the popularity of runtimes like NodeJS and the myriad HTML5 mobile app wrappers like PhoneGap prove that it is viable.&lt;/p&gt;

&lt;p&gt;But what&amp;#8217;s the value for Microsoft? Is this WinJS effort going to encourage devs to port their web apps easily into native Win versions? I think that&amp;#8217;s just not very likely, most devs will settle with just a web app (e.g. Trello), and very successful web apps will get native versions regardless (e.g. Evernote).&lt;/p&gt;

&lt;p&gt;I can&amp;#8217;t help but think that the effort would have been better spent developing a hassle-free PhoneGap-for-Metro kind of wrapper rather than a close-but-not-quite web-like native environment that developers still need to treat like a port and a separate platform.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Facebook IPO and Mobile Social Games</title>
      <link>https://thejare.github.io/2012/02/facebook-ipo-and-mobile-social-games/</link>
      <pubDate>Sat, 04 Feb 2012 02:45:34 +0000</pubDate>
      
      <guid>https://thejare.github.io/2012/02/facebook-ipo-and-mobile-social-games/</guid>
      <description>&lt;p&gt;Facebook&amp;#8217;s IPO has been announced, and this means lots of details on Facebook financials have become public. The most interesting bits for social game developers (in VERY broad terms):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Almost all revenue from Facebook Credits is generated by games.&lt;/li&gt;
&lt;li&gt;Zynga makes up 80% of the total Facebook Credits revenue.&lt;/li&gt;
&lt;li&gt;In broad numbers, on Facebook, Zynga has MAU equal to 1.5x all other game devs combined. But Zynga&amp;#8217;s FB Credits revenue is 4x. That&amp;#8217;s an idea of how much better Zynga is at getting players to pay.&lt;/li&gt;
&lt;li&gt;Most of Facebook&amp;#8217;s revenues come form advertising.&lt;/li&gt;
&lt;li&gt;Facebook mobile gaming is in its infancy.&lt;/li&gt;
&lt;li&gt;Half of Facebook users use the site via mobile, and this percentage is growing very quickly, but Facebook does not monetize them with games nor advertising.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This means that the first game developers to jump on board for Facebook mobile gaming have half of the entire Facebook userbase all for themselves, and Facebook will be more than willing to help them succeed. This was reflected in Zynga&amp;#8217;s shares soaring after this information became public &amp;#8211; it turns out that Zynga&amp;#8217;s dependence on Facebook is matched by Facebook&amp;#8217;s dependence on Zynga.&lt;/p&gt;

&lt;p&gt;Of course, the problems associated with Facebook mobile as a gaming platform are huge:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Screen real estate on a mobile platform is extremely limited, there&amp;#8217;s just not much room to show ads or games inside Facebook mobile without severely reducing the amount of actual content the user can see.&lt;/li&gt;
&lt;li&gt;Phones already have gaming (and app) and platform integrated&lt;/li&gt;
&lt;li&gt;On-the-fly game downloads and persistent server connections are a staple of desktop Facebook games, but on mobile the connections will be less reliable, much slower, and capped.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So, Facebook mobile gaming will be a very different beast from Facebook desktop gaming. Many lessons will carry over, but many established patterns like the neighbours bar, notification popups, crammed isometric views, and Flash programming will go away. The nature of social interactions, gameplay design and UI in Facebook mobile is still full of unknowns, and whoever solves it first has (for now) a big shot at a pretty large pot. The sooner you start, the better.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Stage3D Vertex Buffer formats</title>
      <link>https://thejare.github.io/2011/10/stage3d-vertex-buffer-formats/</link>
      <pubDate>Sat, 08 Oct 2011 02:00:59 +0000</pubDate>
      
      <guid>https://thejare.github.io/2011/10/stage3d-vertex-buffer-formats/</guid>
      <description>&lt;p&gt;If you played with the Stage3D spinning cube sample I linked in the &lt;a href=&#34;http://www.iguanademos.com/Jare/wp/?p=2480&#34;&gt;previous post&lt;/a&gt;, you will notice one thing: the vertex colors in the vertex buffer are given as 3 floats (red, green and blue). This is rather wasteful in most cases because color components often vary between 0.0 and 1.0, and it&amp;#8217;s more efficient to specify vertex colors (including alpha) as a single 32-bit value. For example, in hexadecimal notation, 0xFF800040 would mean alpha of 1.0 (0xFF), blue 0.5 (0x80), green 0 (0x00) and red 0.25 (0x40).&lt;/p&gt;

&lt;p&gt;If you look in the Stage3D docs, you will find the constant &lt;strong&gt;Context3DVertexBufferFormat.BYTES_4&lt;/strong&gt; to use in the call to &lt;strong&gt;Context3D.setVertexBufferAt()&lt;/strong&gt;. But if you naively just change the vertex buffer array to turn each vertex color&amp;#8217;s set of 3 components into a single hex value, make &lt;strong&gt;dataPerVertex&lt;/strong&gt; = 4 instead of 6, and use &lt;strong&gt;BYTES_4&lt;/strong&gt; for va1, then you will find that the colors are coming out wrong. Why? Because the function &lt;strong&gt;VertexBuffer3D.uploadFromVector()&lt;/strong&gt; always stores the values from the Vector in &lt;em&gt;floating point format&lt;/em&gt;. Of course! This is the most common situation for the components of the vertex positions, normals, texture coordinates and such. But we need our &lt;strong&gt;BYTES_4&lt;/strong&gt; color value to be stored verbatim as a 32-bit uint.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vector.&lt;Number&gt;&lt;/strong&gt; and &lt;strong&gt;uploadFromVector()&lt;/strong&gt; do not give you control over the byte format of value. How do you solve this?&lt;/p&gt;

&lt;p&gt;You must use a &lt;strong&gt;ByteArray&lt;/strong&gt;, to which you will copy the values manually with the right format. In our example above, 3 &lt;strong&gt;writeFloat()&lt;/strong&gt; calls plus a &lt;strong&gt;writeUnsignedInt()&lt;/strong&gt; for the 32-bit color. A detail that stumped me for a while is that you must ensure the &lt;strong&gt;ByteArray&lt;/strong&gt; is &lt;strong&gt;Endian.LITTLE_ENDIAN&lt;/strong&gt;, it defaults to &lt;strong&gt;BIG_ENDIAN&lt;/strong&gt;. I wrote this function to perform this process, with the aid of an array that stores the format of each varying parameter:&lt;/p&gt;

&lt;pre&gt;private static function DumpVectorComponentsIntoByteArray(dest:ByteArray,
                                                          src:Vector.&amp;lt;Number&amp;gt;,
                                                          componentFormats:Array): void
{
    dest.endian = Endian.LITTLE_ENDIAN;
    for (var i:int = 0; i &amp;lt; src.length; )
    {
        for (var j:int = 0; j &amp;lt; componentFormats.length; ++j)
        {
            switch (componentFormats[j])
            {
                case Context3DVertexBufferFormat.FLOAT_2:
                    dest.writeFloat(src[i]);
                    dest.writeFloat(src[i+1]);
                    i += 2;
                    break;
                case Context3DVertexBufferFormat.FLOAT_3:
                    dest.writeFloat(src[i]);
                    dest.writeFloat(src[i + 1]);
                    dest.writeFloat(src[i + 2]);
                    i += 3;
                    break;
                case Context3DVertexBufferFormat.FLOAT_4:
                    dest.writeFloat(src[i]);
                    dest.writeFloat(src[i + 1]);
                    dest.writeFloat(src[i + 2]);
                    dest.writeFloat(src[i + 3]);
                    i += 4;
                    break;
                case Context3DVertexBufferFormat.BYTES_4:
                    dest.writeUnsignedInt(src[i]);
                    ++i;
                    break;
            }
        }
    }
}&lt;/pre&gt;

&lt;p&gt;So, in the case of the spinning cube, the component array would be:&lt;/p&gt;

&lt;pre&gt;var vertexBufferComponents:Array = new Array(
    Context3DVertexBufferFormat.FLOAT_3,
    Context3DVertexBufferFormat.BYTES_4
);&lt;/pre&gt;

&lt;p&gt;With that array in hand, another useful function to set the array components into the context:&lt;/p&gt;

&lt;pre&gt;private function SetVertexArrays(componentFormats:Array, vertices:VertexBuffer3D): void
{
    var offset:int = 0;
    for (var j:int = 0; j &amp;lt; componentFormats.length; ++j)
    {
        renderContext.setVertexBufferAt( j, vertices, offset, componentFormats[j] );
        switch (componentFormats[j])
        {
            case Context3DVertexBufferFormat.FLOAT_2:
                offset += 2;
                break;
            case Context3DVertexBufferFormat.FLOAT_3:
                offset += 3;
                break;
            case Context3DVertexBufferFormat.FLOAT_4:
                offset += 4;
                break;
            case Context3DVertexBufferFormat.BYTES_4:
                offset += 1;
                break;
        }
    }
}&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Fun with HTML5</title>
      <link>https://thejare.github.io/2011/09/fun-with-html5/</link>
      <pubDate>Thu, 29 Sep 2011 21:50:34 +0000</pubDate>
      
      <guid>https://thejare.github.io/2011/09/fun-with-html5/</guid>
      <description>&lt;p&gt;I have been playing around with HTML5, Canvas and WebGL. Not a lot to show for it, but at least I forced myself to write a bit again. Check it out &lt;a href=&#34;http://www.iguanademos.com/Jare/docs/html5/Lessons/&#34;&gt;here&lt;/a&gt; if you&amp;#8217;re curious, and good luck reaching a score of 150 on Lesson 5!&lt;/p&gt;

&lt;p&gt;By the way, for some reason Firefox has started to run Lesson 5 rather slow in both my PCs. I&amp;#8217;m pretty sure it used to be a rock solid 60 fps back when I wrote the game, but at some point either upgrading past Firefox 5, or upgrading to Windows 7, has made it slow. Other Canvas or WebGL stuff (for example &lt;a href=&#34;http://helloracer.com/webgl/&#34;&gt;Hello Racer&lt;/a&gt;) show similar slowdowns. Chrome and Opera run everything silk smooth, so it&amp;#8217;s definitely not a hardware or drivers problem.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;ve been slowly moving away from Firefox and using Chrome more and more. Firefox was really my favourite, but it&amp;#8217;s got so many problems, it&amp;#8217;s so bloated and slow (even 7.0), Chrome has become my browser of choice.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello world again</title>
      <link>https://thejare.github.io/2011/09/hello-world-again/</link>
      <pubDate>Sat, 24 Sep 2011 12:25:42 +0000</pubDate>
      
      <guid>https://thejare.github.io/2011/09/hello-world-again/</guid>
      <description>&lt;p&gt;I may be getting interested in writing stuff again with more depth and detail, appropriate (even if small) audience, and with clearer ownership than social networks provide. Twitter is cool as a sort of RSS aggregator; Facebook has become intrusive, annoying and just generally inadequate for anything but on-the-fly photo and YouTube sharing; and Google+ has flatlined. In preparation for more writing, I have added a WordPress blog to my site, because my old blog system was fun to write but boring to maintain and extend.&lt;/p&gt;

&lt;p&gt;I imported all the old content, converted the markup with a php script (destroying a bunch of stuff along the way) and deleted most of the old spam comments I could find (over 700).&lt;/p&gt;

&lt;p&gt;Lots of settings, style and layout still to do, but it&amp;#8217;s a start. Update your RSS if you are a subscriber!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Google&#43;</title>
      <link>https://thejare.github.io/2011/06/google/</link>
      <pubDate>Thu, 30 Jun 2011 22:53:54 +0000</pubDate>
      
      <guid>https://thejare.github.io/2011/06/google/</guid>
      <description>&lt;p&gt;Catch me there:&lt;br /&gt;
&lt;a href=&#34;https://plus.google.com/109393462510769944302/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://plus.google.com/109393462510769944302/&#34;&gt;https://plus.google.com/109393462510769944302/&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Relinuxed</title>
      <link>https://thejare.github.io/2011/05/relinuxed/</link>
      <pubDate>Thu, 12 May 2011 12:44:33 +0000</pubDate>
      
      <guid>https://thejare.github.io/2011/05/relinuxed/</guid>
      <description>&lt;p&gt;Time for that old laptop to receive Ubuntu 11.04!&lt;/p&gt;

&lt;p&gt;Er&amp;#8230;&lt;/p&gt;

&lt;p&gt;Apparently, the graphics card is too old to run the fancy new Unity UI. Ah well, in any case, it&amp;#8217;s a good idea to have a working Linux machine.&lt;/p&gt;

&lt;p&gt;Then, the &lt;a href=&#34;http://www.iguanademos.com/Jare/jblog_viewtopic.php?topicid=1381&#34;&gt;same problem as before&lt;/a&gt;. And I hate myself for not detailing precisely what I did to speed up the HDD. I need to fix this ASAP because the system has started doing massive checks to update packages and the machine is completely unusable. So here it goes this time (DISCLAIMER: I don&amp;#8217;t really know what I&amp;#8217;m doing and I don&amp;#8217;t care if I destroy the hard drive and its contents):&lt;/p&gt;

&lt;p&gt;&amp;#8211; See &lt;a href=&#34;http://fenidik.blogspot.com/2010/03/ext4-disable-journal.html&#34; target=&#34;_blank&#34;&gt;this link&lt;/a&gt; for instructions.&lt;/p&gt;

&lt;p&gt;&amp;#8211; The problem is that I can&amp;#8217;t do these things on a boot partition while happily running the full system on the Gnome desktop.&lt;/p&gt;

&lt;p&gt;&amp;#8211; Reboot in recovery mode (keep SHIFT pressed while booting), drop down to the recovery terminal.&lt;/p&gt;

&lt;p&gt;&amp;#8211; &amp;#8216;&lt;strong&gt;mount -no remount,ro /&lt;/strong&gt;&amp;#8216; to remount the file system in read only mode with. Ooops! can&amp;#8217;t do that while running services that have files open for writing.&lt;/p&gt;

&lt;p&gt;&amp;#8211; &amp;#8216;&lt;strong&gt;fuser -v -m /&lt;/strong&gt;&amp;#8216; lists which services have files open (look for a &amp;#8216;F&amp;#8217; or &amp;#8216;f&amp;#8217; in the flags) and get ready to kill some of these processes. Note that not all of them will need to be killed, so use some judgement and go one by one. Start with the &amp;#8216;F&amp;#8217; ones.&lt;/p&gt;

&lt;p&gt;&amp;#8211; Try to kill them nicely first with &amp;#8216;&lt;strong&gt;stop &lt;em&gt;servicename&lt;/em&gt;&lt;/strong&gt;&amp;#8216;. In my case, I just did &amp;#8216;&lt;strong&gt;stop rsyslog&lt;/strong&gt;&amp;#8216; and tried to remount, it worked even though there were other services (&lt;strong&gt;recovery-menu&lt;/strong&gt; and &lt;strong&gt;root&lt;/strong&gt;) with &amp;#8216;f&amp;#8217; flags. We have a read only filesystem!&lt;/p&gt;

&lt;p&gt;&amp;#8211; &amp;#8216;&lt;strong&gt;tune2fs -o journal_data_writeback /dev/sda1&lt;/strong&gt;&amp;#8216;&lt;/p&gt;

&lt;p&gt;&amp;#8211; &amp;#8216;&lt;strong&gt;tune2fs -O ^has_journal /dev/sda1&lt;/strong&gt;&amp;#8216;&lt;/p&gt;

&lt;p&gt;&amp;#8211; &amp;#8216;&lt;strong&gt;e2fsck -f /dev/sda1&lt;/strong&gt;&amp;#8216;&lt;/p&gt;

&lt;p&gt;&amp;#8211; &amp;#8216;&lt;strong&gt;reboot&lt;/strong&gt;&amp;#8216;&lt;/p&gt;

&lt;p&gt;&amp;#8211; Upon reboot, I see that the system is now complaining about a missing disk but it then proceeds. Looking at the /etc/fstab file, the missing disk was used as swap during installation.&lt;/p&gt;

&lt;p&gt;&amp;#8211; In the &lt;strong&gt;/etc/fstab&lt;/strong&gt; file, add the options &amp;#8216;&lt;strong&gt;data=writeback,noatime,nodiratime&lt;/strong&gt;&amp;#8216; for your / drive. Reboot.&lt;/p&gt;

&lt;p&gt;&amp;#8211; Go to the Synaptyc Package Manager to continue updating the system. Mine complained about broken files, and asked me to do &amp;#8216;&lt;strong&gt;sudo dpkg &amp;#8211;configure -a&lt;/strong&gt;&amp;#8216;. That&amp;#8217;s all for now!&lt;/p&gt;

&lt;p&gt;Well, I dunno what will be different for you.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>