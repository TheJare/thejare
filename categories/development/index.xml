<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on Jare&#39;s Blog</title>
    <link>https://thejare.github.io/categories/development/</link>
    <description>Recent content in Development on Jare&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Dec 2017 01:27:02 +0200</lastBuildDate><atom:link href="https://thejare.github.io/categories/development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ludum Dare 40</title>
      <link>https://thejare.github.io/2017/12/ludum-dare-40/</link>
      <pubDate>Sun, 03 Dec 2017 01:27:02 +0200</pubDate>
      
      <guid>https://thejare.github.io/2017/12/ludum-dare-40/</guid>
      <description>&lt;p&gt;I made a little Ludum Dare 40 entry by the name of Idle Icon. &lt;a href=&#34;../../html/ld40/&#34;&gt;Try it here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GDC 2014 Slides Compilation</title>
      <link>https://thejare.github.io/2014/03/gdc-2014-slides-compilation/</link>
      <pubDate>Wed, 19 Mar 2014 01:52:19 +0000</pubDate>
      
      <guid>https://thejare.github.io/2014/03/gdc-2014-slides-compilation/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Edit&lt;/strong&gt;: I think the &lt;a href=&#34;http://www.gdcvault.com/free/gdc-14&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GDC Vault&lt;/a&gt; has been updated with all available content, so you may want to go there instead. See you next year!?&lt;/p&gt;
&lt;p&gt;Get’em while they’re fresh! If you know of stuff missing here, please tell me about it on Twitter &lt;a href=&#34;https://twitter.com/TheJare&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@TheJare&lt;/a&gt;. You can also check industry sites like &lt;a href=&#34;http://www.gamasutra.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gamasutra&lt;/a&gt;, &lt;a href=&#34;http://www.polygon.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Polygon&lt;/a&gt; or &lt;a href=&#34;http://www.develop-online.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Develop&lt;/a&gt; for ongoing coverage, and hopefully a lot of these materials will show up in the &lt;a href=&#34;http://www.gdcvault.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GDC Vault&lt;/a&gt; soon.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Firedemo 20th anniversary</title>
      <link>https://thejare.github.io/2013/05/firedemo-20th-anniversary/</link>
      <pubDate>Sat, 04 May 2013 02:55:18 +0000</pubDate>
      
      <guid>https://thejare.github.io/2013/05/firedemo-20th-anniversary/</guid>
      <description>&lt;p&gt;It’s been nearly 20 years since we released that old fire effect and the demoscene turned out to love it. I have &lt;a href=&#34;http://www.iguanademos.com/Jare/files/Fire/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ported it to HTML5&lt;/a&gt; to celebrate!&lt;/p&gt;
&lt;p&gt;It all started when we bought a math coprocessor for our 386/25 and I started playing with fractals and plasmas. A few programming mistakes later, this thing came out and looked neat, so we slapped JCAB’s VT player and released it. Eternal gratitude to Jester of Sanity for unknowingly lending me his fantastic &lt;a href=&#34;http://mod.haxor.fi/Jester/mod.elysium&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;‘Elysium’ mod&lt;/a&gt; – it didn’t take me long to learn that such acts were VERY badly frowned upon.&lt;/p&gt;
&lt;p&gt;You can check out the &lt;a href=&#34;https://github.com/TheJare/FiredemoHTML5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;source code on github&lt;/a&gt; if you are so inclined. The comments are slightly better this time! This version runs rather slowly on Chrome, and I don’t really know why, but IE, Firefox (Win and Android) and iOS Safari work great.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GDC 2013</title>
      <link>https://thejare.github.io/2013/03/gdc-2013/</link>
      <pubDate>Thu, 28 Mar 2013 21:22:04 +0000</pubDate>
      
      <guid>https://thejare.github.io/2013/03/gdc-2013/</guid>
      <description>&lt;p&gt;It’s that time of the year again, when everyone else is partying and having fun (&lt;a href=&#34;http://www.forbes.com/sites/carolpinchefsky/2013/03/27/really-igda-party-at-gdc-brings-on-the-female-dancers/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;or maybe not – WTF IGDA?&lt;/a&gt;) at GDC in San Francisco. I’ll try to collect any links to lecture materials I come across. If you know of stuff missing here, please tell me about it on Twitter &lt;a href=&#34;https://twitter.com/TheJare&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@TheJare&lt;/a&gt;. You can also check industry sites like &lt;a href=&#34;http://www.gamasutra.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gamasutra&lt;/a&gt;, &lt;a href=&#34;http://www.polygon.com/2013/3/25/4145780/gdc-2013-panels-announcements-and-more-live-from-san-francisco&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Polygon&lt;/a&gt; or &lt;a href=&#34;http://www.develop-online.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Develop&lt;/a&gt; for ongoing coverage, and hopefully a lot of these materials will show up in the &lt;a href=&#34;http://www.gdcvault.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GDC Vault&lt;/a&gt; soon.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Haskell</title>
      <link>https://thejare.github.io/2013/03/haskell/</link>
      <pubDate>Sun, 03 Mar 2013 23:05:18 +0000</pubDate>
      
      <guid>https://thejare.github.io/2013/03/haskell/</guid>
      <description>&lt;p&gt;Back in my 2nd year in college (1990), I took a half year course on functional programming. Back then, having several years of heavy duty Z80 assembly &lt;a href=&#34;http://www.mobygames.com/game/star-dust&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;videogames &lt;/a&gt;&lt;a href=&#34;http://computeremuzone.com/ficha.php?id=281&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;programming&lt;/a&gt;, and being recently introduced to high level languages via Pascal and Modula 2, my brain was very fresh and open to new paradigms and ideas. Structured languages like Pascal and C were a great way to remove some of the tedium and bureaucracy of assembly, but functional was mindblowing. I already understood the idea of passing functions around as parameters, since we did a lot of that in our semi-OOP approach to game character behaviour. But when you create your first infinite list, wow, that’s a moment to remember!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Articles</title>
      <link>https://thejare.github.io/articles/</link>
      <pubDate>Mon, 09 Jul 2012 00:35:38 +0000</pubDate>
      
      <guid>https://thejare.github.io/articles/</guid>
      <description> HTML5/Canvas Game Lessons Fixed Timestep Loop DLL / Macro Tricks Init / End Protocol DLL Interfaces Rectangle Packer Praetorians DevDiary - sadly, was hosted in GameSpy and vanished one day Reducing Game Load Times Positional Printf  </description>
    </item>
    
    <item>
      <title>Downloads</title>
      <link>https://thejare.github.io/downloads/</link>
      <pubDate>Mon, 09 Jul 2012 00:35:38 +0000</pubDate>
      
      <guid>https://thejare.github.io/downloads/</guid>
      <description>Articles and lecture slides  Slides from my talks at Mundos Digitales and GameLab, July 2006 (in Spanish). Slides from my talk at the Universidad Politecnica de Catalunya, March 2006 (in Spanish). Slides from my talk at the Universidad Complutense de Madrid, April 2005 (in Spanish). Slides from my talk at the University of Seville in March 2003 (in Spanish).   Source Code  RectLayout, a class to aid in resolution-independent 2D layout of rectangles.</description>
    </item>
    
    <item>
      <title>SpainJS</title>
      <link>https://thejare.github.io/2012/07/spainjs/</link>
      <pubDate>Mon, 09 Jul 2012 00:35:38 +0000</pubDate>
      
      <guid>https://thejare.github.io/2012/07/spainjs/</guid>
      <description>&lt;p&gt;Yesterday I had the honor to give a presentation at the &lt;a href=&#34;http://spainjs.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SpainJS&lt;/a&gt; Javascript conference in Madrid, on the topic of Videogames and Javascript. I wasted a lot of time preparing a dynamic HTML5 page for my deck of slides, which was my excuse to play with CSS 3d transitions and fancy formatting. You can see the &lt;a href=&#34;http://iguanademos.com/Jare/docs/html5/SpainJS2012/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;dynamic deck&lt;/a&gt; (which needs Chrome/Firefox or a similarly decent browser), the &lt;a href=&#34;http://iguanademos.com/Jare/docs/html5/SpainJS2012/#all&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;static deck&lt;/a&gt; (should work everywhere), a &lt;a href=&#34;http://iguanademos.com/Jare/docs/html5/SpainJS2012/spainjs.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF&lt;/a&gt; I converted using &lt;a href=&#34;http://code.google.com/p/wkhtmltopdf/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;wkhtmltopdf&lt;/a&gt;, the &lt;a href=&#34;https://speakerdeck.com/u/thejare/p/overview-of-javascript-in-games&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Speakerdeck&lt;/a&gt;, or the &lt;a href=&#34;http://www.youtube.com/watch?v=j4JmYAVjm1c&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;video&lt;/a&gt;. Enjoy!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Githubbed!</title>
      <link>https://thejare.github.io/2012/05/githubbed/</link>
      <pubDate>Wed, 16 May 2012 01:35:49 +0000</pubDate>
      
      <guid>https://thejare.github.io/2012/05/githubbed/</guid>
      <description>A few months ago I created a Github account to see what it’s all about. Even if you use it yourself without all the nice features of a distributed version control system, it’s a great way to manage &amp;amp; publish your open source projects!
I put up there some of my old C/C++ code, and a few experiments I’ve toyed with in my (now scarce) spare time, mostly related to JavaScript.</description>
    </item>
    
    <item>
      <title>GDC 2012</title>
      <link>https://thejare.github.io/2012/03/gdc-2012/</link>
      <pubDate>Fri, 09 Mar 2012 01:25:41 +0000</pubDate>
      
      <guid>https://thejare.github.io/2012/03/gdc-2012/</guid>
      <description>&lt;p&gt;[Edit]: The &lt;a href=&#34;http://www.gdcvault.com/free/gdc-12&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GDC Vault is now open&lt;/a&gt; for business, with lots of slides and presentations. Meggan Scavio also had &lt;a href=&#34;https://twitter.com/#!/megganpez/status/185857804324712448&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;good news on Twitter&lt;/a&gt; about availability of free videos.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>node.js</title>
      <link>https://thejare.github.io/2012/01/node.js/</link>
      <pubDate>Sat, 28 Jan 2012 03:47:06 +0000</pubDate>
      
      <guid>https://thejare.github.io/2012/01/node.js/</guid>
      <description>&lt;p&gt;cdoral in &lt;a href=&#34;http://www.iguanademos.com/Jare/wp/?p=2385#comment-3491&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;another post&lt;/a&gt; mentions &lt;a href=&#34;http://nodejs.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;node.js&lt;/a&gt;. I have been following this project for a while so I thought I’d write a little blurb about it and include a few links for further and more in-depth information. Coincidentally, the &lt;a href=&#34;http://nodesummit.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Node Summit&lt;/a&gt; was held this week in SF, so there may be interesting and fresh material coming from there soon.&lt;/p&gt;
&lt;p&gt;First things first: I have played with node.js for little experiments but haven’t yet found an opportunity to put it to real, production use. Version 0.6 addressed some of my questions about its capabilities and performance, and it is already being used on production servers for many traffic-heavy sites like eBay or LinkedIn, so it’s clearly gone beyond the experimental stage. If you are building a web service today, node.js is a technology you should consider.&lt;/p&gt;
&lt;p&gt;Node is a stand-alone executable that will run a JavaScript file passed on the command line:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;node app.js&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Your JavaScript program can use the standard JavaScript libraries (Math, etc) and a bunch of node-specific libraries. In most cases, your program will enter an infinite event loop and start receiving, processing and responding to network requests.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Unity3D 3.5 Developer preview is out</title>
      <link>https://thejare.github.io/2011/12/unity3d-3.5-developer-preview-is-out/</link>
      <pubDate>Wed, 28 Dec 2011 00:09:45 +0000</pubDate>
      
      <guid>https://thejare.github.io/2011/12/unity3d-3.5-developer-preview-is-out/</guid>
      <description>&lt;p&gt;And it includes a fancy exporter to Flash11 / Stage3D. All of a sudden, the best way to author advanced Flash content is Unity, not Flash. Considering that Adobe makes their money from Flash tools rather than the plugin, it’s a really odd situation. With the current outlook of Flash after the ‘&lt;a href=&#34;http://creativecodingpodcast.com/?p=140&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Flashmageddon&lt;/a&gt;‘, it’s hard to say how relevant this will be in the long term, but it’s an impressive feature! And the obligatory cube to celebrate it:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Colors!</title>
      <link>https://thejare.github.io/2011/12/colors/</link>
      <pubDate>Mon, 26 Dec 2011 10:07:57 +0000</pubDate>
      
      <guid>https://thejare.github.io/2011/12/colors/</guid>
      <description>&lt;p&gt;Our little one loves to grab anything shiny, but is especially attracted to LCD screens of any type. He loves the netbook, the MacBook, my desktop’s dual monitors, and of course the big TV, but most of all he loves the iPhone. I often activate the camera in reverse mode and let him play with it, but there’s always been a problem: while he manipulates the phone, he will push some control or other and stop the camera, go to the desktop and start pushing random icons. I was wishing for some sort of ‘baby mode’ where something neat would be happening on the screen, but controls would be disabled.&lt;/p&gt;
&lt;p&gt;I decided to use the Sunday morning to dust off my Canvas, CSS and JavaScript skills to code, with Alba’s design input and feedback, a little BabySaver that could keep his attention with bright colors, and be impossible to quit for him. &lt;!-- raw HTML omitted --&gt;Click here&lt;!-- raw HTML omitted --&gt; to see its current form. Click on the “Endless” button to enable interactions, otherwise any clicks will take you to my homepage.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Text Editors</title>
      <link>https://thejare.github.io/2011/12/text-editors/</link>
      <pubDate>Thu, 15 Dec 2011 08:48:58 +0000</pubDate>
      
      <guid>https://thejare.github.io/2011/12/text-editors/</guid>
      <description>&lt;p&gt;Programmers spend most of our time in front of a text editor. Whether it is a standalone editor, or one integrated in an IDE, that’s just what we do.&lt;/p&gt;
&lt;p&gt;Back in MS-DOS days, my editor of choice was &lt;!-- raw HTML omitted --&gt;QEdit&lt;!-- raw HTML omitted --&gt;, later renamed to The Semware Editor. I loved its configurability, and remapped pretty much everything in it to suit my preferences. Around that time I was also working on Unix systems and used vi there, although only for short editing sessions. I had been exposed to &lt;!-- raw HTML omitted --&gt;Emacs&lt;!-- raw HTML omitted --&gt; multiple times (starting with MicroEmacs on the Atari ST), but I could never get comfortable with its crazy keyboard combos.&lt;/p&gt;
&lt;p&gt;After Windows 95 came and became my regular environment, the best choice was &lt;!-- raw HTML omitted --&gt;Ultraedit&lt;!-- raw HTML omitted --&gt;. Very soon, Microsoft Visual Studio became the compiler and IDE of choice for Win95 development, and its built-in editor proved quite powerful, so I would use Ultraedit for editing files that were not C++.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>On Freemium, playstyles and evil game design</title>
      <link>https://thejare.github.io/2011/10/on-freemium-playstyles-and-evil-game-design/</link>
      <pubDate>Sat, 22 Oct 2011 09:08:14 +0000</pubDate>
      
      <guid>https://thejare.github.io/2011/10/on-freemium-playstyles-and-evil-game-design/</guid>
      <description>&lt;p&gt;In a couple of Gamasutra &lt;a href=&#34;http://www.gamasutra.com/blogs/AdamSaltsman/20111018/8685/Contrivance_and_Extortion_InApp_Purchases__Microtransactions.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blog&lt;/a&gt; &lt;a href=&#34;http://www.gamasutra.com/blogs/AdamSaltsman/20111020/8703/Contrivance_and_Extortion_II_Clarifications_Feedback__Suggestions.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;posts&lt;/a&gt;, Adam Saltsman (of ‘Canabalt’ fame) ranted against what he feels are ‘evil’ game design systems. I characterized his arguments as ‘hysterical’, which is perhaps a bit unfair since rants are meant to be hot. Anyway, at some point I felt compelled to write a long reply, and I’m reposting it here. I’ve edited it only slightly, so it’s possible that some of it is confusing outside of the context of the original discussion.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;My guidelines are not for gamers; they’re for humans. My guidelines are not about styles of game or difficulty of game; they’re about treating players with a modicum of respect.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now, we agree that all players and all humans should be treated with respect. But there is no inherent lack of respect in ensuring that your game encourages players to pay if they like the game and want to enjoy more of it. If anything, you are asking players to respect YOU as a creator by paying something for the enjoyment they derive from your work. Short of a pure donation model, this encouragement must affect the product you create in some ways. That doesn’t make the creator greedy, which seems to be Adam’s characterization of the monetization process.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Stage3D Vertex Buffer formats</title>
      <link>https://thejare.github.io/2011/10/stage3d-vertex-buffer-formats/</link>
      <pubDate>Sat, 08 Oct 2011 02:00:59 +0000</pubDate>
      
      <guid>https://thejare.github.io/2011/10/stage3d-vertex-buffer-formats/</guid>
      <description>&lt;p&gt;If you played with the Stage3D spinning cube sample I linked in the &lt;a href=&#34;http://www.iguanademos.com/Jare/wp/?p=2480&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;previous post&lt;/a&gt;, you will notice one thing: the vertex colors in the vertex buffer are given as 3 floats (red, green and blue). This is rather wasteful in most cases because color components often vary between 0.0 and 1.0, and it’s more efficient to specify vertex colors (including alpha) as a single 32-bit value. For example, in hexadecimal notation, 0xFF800040 would mean alpha of 1.0 (0xFF), blue 0.5 (0x80), green 0 (0x00) and red 0.25 (0x40).&lt;/p&gt;
&lt;p&gt;If you look in the Stage3D docs, you will find the constant &lt;strong&gt;Context3DVertexBufferFormat.BYTES_4&lt;/strong&gt; to use in the call to &lt;strong&gt;Context3D.setVertexBufferAt()&lt;/strong&gt;. But if you naively just change the vertex buffer array to turn each vertex color’s set of 3 components into a single hex value, make &lt;strong&gt;dataPerVertex&lt;/strong&gt; = 4 instead of 6, and use &lt;strong&gt;BYTES_4&lt;/strong&gt; for va1, then you will find that the colors are coming out wrong. Why? Because the function &lt;strong&gt;VertexBuffer3D.uploadFromVector()&lt;/strong&gt; always stores the values from the Vector in &lt;em&gt;floating point format&lt;/em&gt;. Of course! This is the most common situation for the components of the vertex positions, normals, texture coordinates and such. But we need our &lt;strong&gt;BYTES_4&lt;/strong&gt; color value to be stored verbatim as a 32-bit uint.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Vector.&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt; and &lt;strong&gt;uploadFromVector()&lt;/strong&gt; do not give you control over the byte format of value. How do you solve this?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Flash Stage 3D is out!</title>
      <link>https://thejare.github.io/2011/10/flash-stage-3d-is-out/</link>
      <pubDate>Thu, 06 Oct 2011 08:06:41 +0000</pubDate>
      
      <guid>https://thejare.github.io/2011/10/flash-stage-3d-is-out/</guid>
      <description>&lt;p&gt;A couple of days ago, Adobe released to the masses a new version of their Flash Player, and an updated SDK. The biggest change (for me at least) is the inclusion of hardware-accelerated 3D, known as &lt;a href=&#34;http://www.adobe.com/devnet/flashplayer/stage3d.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Stage3D&lt;/a&gt;. Here’s a quick tour of what I did to compile and run my first Stage3D program (Windows 7 PC but should be applicable everywhere). Useful because the Adobe site is not really clear about this.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
